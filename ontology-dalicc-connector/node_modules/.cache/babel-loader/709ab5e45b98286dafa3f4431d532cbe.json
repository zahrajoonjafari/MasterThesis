{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _eachOfLimit;\nvar _noop = require('lodash/noop');\nvar _noop2 = _interopRequireDefault(_noop);\nvar _once = require('./once');\nvar _once2 = _interopRequireDefault(_once);\nvar _iterator = require('./iterator');\nvar _iterator2 = _interopRequireDefault(_iterator);\nvar _onlyOnce = require('./onlyOnce');\nvar _onlyOnce2 = _interopRequireDefault(_onlyOnce);\nvar _breakLoop = require('./breakLoop');\nvar _breakLoop2 = _interopRequireDefault(_breakLoop);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _eachOfLimit(limit) {\n  return function (obj, iteratee, callback) {\n    callback = (0, _once2.default)(callback || _noop2.default);\n    if (limit <= 0 || !obj) {\n      return callback(null);\n    }\n    var nextElem = (0, _iterator2.default)(obj);\n    var done = false;\n    var running = 0;\n    var looping = false;\n    function iterateeCallback(err, value) {\n      running -= 1;\n      if (err) {\n        done = true;\n        callback(err);\n      } else if (value === _breakLoop2.default || done && running <= 0) {\n        done = true;\n        return callback(null);\n      } else if (!looping) {\n        replenish();\n      }\n    }\n    function replenish() {\n      looping = true;\n      while (running < limit && !done) {\n        var elem = nextElem();\n        if (elem === null) {\n          done = true;\n          if (running <= 0) {\n            callback(null);\n          }\n          return;\n        }\n        running += 1;\n        iteratee(elem.value, elem.key, (0, _onlyOnce2.default)(iterateeCallback));\n      }\n      looping = false;\n    }\n    replenish();\n  };\n}\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}