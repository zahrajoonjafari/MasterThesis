{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ripemd160_1 = require(\"../ripemd160\");\nvar sha256_1 = require(\"../sha256\");\nexports.createHmac = require(\"create-hmac\");\nexports.randomBytes = require(\"randombytes\");\nvar Hash = /** @class */function () {\n  function Hash(hashFunction) {\n    this.hashFunction = hashFunction;\n    this.buffers = [];\n  }\n  Hash.prototype.update = function (buffer) {\n    if (!Buffer.isBuffer(buffer)) {\n      throw new Error(\"hdkey-crypto shim is outdated\");\n    }\n    this.buffers.push(buffer);\n    return this;\n  };\n  Hash.prototype.digest = function (param) {\n    if (param) {\n      throw new Error(\"hdkey-crypto shim is outdated\");\n    }\n    return this.hashFunction(Buffer.concat(this.buffers));\n  };\n  return Hash;\n}();\n// We don't use create-hash here, as it doesn't work well with Rollup\nexports.createHash = function (name) {\n  if (name === \"ripemd160\") {\n    return new Hash(ripemd160_1.ripemd160);\n  }\n  if (name === \"sha256\") {\n    return new Hash(sha256_1.sha256);\n  }\n  throw new Error(\"hdkey-crypto shim is outdated\");\n};","map":null,"metadata":{},"sourceType":"script"}