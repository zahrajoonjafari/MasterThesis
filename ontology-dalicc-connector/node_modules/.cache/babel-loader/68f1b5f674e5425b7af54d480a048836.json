{"ast":null,"code":"import _asyncToGenerator from \"/home/sima/Desktop/finalMaster/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/sima/Desktop/finalMaster/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/home/sima/Desktop/finalMaster/src/SmartContract.js\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport React, { useEffect, useState } from \"react\";\nimport FileUpload from \"./FileUpload\";\nimport DaliccConnectorContract from './contracts/PrimaryLicenseContract.json';\nimport getWeb3 from \"./getWeb3\";\nvar SmartContract = function SmartContract() {\n  var crypto = require(\"crypto\");\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    web3 = _useState2[0],\n    setWeb3 = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    accounts = _useState4[0],\n    setAccounts = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    contract = _useState6[0],\n    setContract = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    initialized = _useState8[0],\n    setInitialized = _useState8[1];\n  var _useState9 = useState(null),\n    _useState10 = _slicedToArray(_useState9, 2),\n    dalicc = _useState10[0],\n    setLicenseDalicc = _useState10[1];\n  var _useState11 = useState(\"\"),\n    _useState12 = _slicedToArray(_useState11, 2),\n    licenseInfo = _useState12[0],\n    setLicenseInfo = _useState12[1];\n  var _useState13 = useState(''),\n    _useState14 = _slicedToArray(_useState13, 2),\n    hashValue = _useState14[0],\n    setHash = _useState14[1];\n  var _useState15 = useState(''),\n    _useState16 = _slicedToArray(_useState15, 2),\n    blockNumber = _useState16[0],\n    setBlockNumber = _useState16[1];\n  var hash = null;\n  var data = null;\n  var f = null;\n  var uri = null;\n  var address = null;\n  var init = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var _web3, _accounts, _networkId, _blockNumber, _deployedNetwork, _contract;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return getWeb3();\n          case 3:\n            _web3 = _context.sent;\n            _context.next = 6;\n            return _web3.eth.getAccounts();\n          case 6:\n            _accounts = _context.sent;\n            _context.next = 9;\n            return _web3.eth.net.getId();\n          case 9:\n            _networkId = _context.sent;\n            _context.next = 12;\n            return _web3.eth.getBlockNumber();\n          case 12:\n            _blockNumber = _context.sent;\n            //console.log('BN:'+_blockNumber);\n            _deployedNetwork = DaliccConnectorContract.networks[_networkId];\n            _contract = new _web3.eth.Contract(DaliccConnectorContract.abi, _deployedNetwork && _deployedNetwork.address); //  console.log('infuraAccounts: '+_accounts);\n            setWeb3(_web3);\n            setAccounts(_accounts);\n            setContract(_contract);\n            console.log('accounts' + _accounts);\n            //  setBlockNumber(_blockNumber); \n            setInitialized(true);\n            _context.next = 25;\n            break;\n          case 22:\n            _context.prev = 22;\n            _context.t0 = _context[\"catch\"](0);\n            alert('Failed to connect to Web3 in smart contract');\n          case 25:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[0, 22]]);\n    }));\n    return function init() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var licenseData = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(data, uri, address, f) {\n      var _dalicc;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!initialized) {\n              _context2.next = 6;\n              break;\n            }\n            hash = crypto.createHash('sha256');\n            _context2.next = 4;\n            return contract.methods.licenseData('0x' + hash.update(data).digest('hex').toString(), uri).send({\n              from: address\n            }, f);\n          case 4:\n            _dalicc = _context2.sent;\n            setLicenseDalicc(_dalicc);\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }));\n    return function licenseData(_x, _x2, _x3, _x4) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var getLicenseInformation = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(data, address, f) {\n      var _licenseInfo;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            if (!initialized) {\n              _context3.next = 6;\n              break;\n            }\n            hash = crypto.createHash('sha256');\n            _context3.next = 4;\n            return contract.methods.getLicenseInfo('0x' + hash.update(data).digest('hex').toString()).call({\n              from: accounts\n            }, f);\n          case 4:\n            _licenseInfo = _context3.sent;\n            setLicenseInfo(_licenseInfo);\n          case 6:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3);\n    }));\n    return function getLicenseInformation(_x5, _x6, _x7) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    init();\n  }, [web3, accounts, contract]);\n  useEffect(function () {\n    return function () {\n      return getLicenseInformation(data, address, f);\n    };\n  }, [web3, accounts, contract]);\n  useEffect(function () {\n    return function () {\n      return licenseData(data, uri, address, f);\n    };\n  }, [web3, accounts, contract]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 6\n    }\n  }, \"address=\", accounts, \"blockNumber=\", blockNumber, /*#__PURE__*/React.createElement(FileUpload, {\n    web3: web3,\n    contract: contract,\n    accounts: accounts,\n    getLicenseInformation: getLicenseInformation,\n    licenseData: licenseData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }));\n};\nexport default SmartContract;","map":{"version":3,"names":["React","useEffect","useState","FileUpload","DaliccConnectorContract","getWeb3","SmartContract","crypto","require","web3","setWeb3","accounts","setAccounts","contract","setContract","initialized","setInitialized","dalicc","setLicenseDalicc","licenseInfo","setLicenseInfo","hashValue","setHash","blockNumber","setBlockNumber","hash","data","f","uri","address","init","_web3","eth","getAccounts","_accounts","net","getId","_networkId","getBlockNumber","_blockNumber","_deployedNetwork","networks","_contract","Contract","abi","console","log","alert","licenseData","createHash","methods","update","digest","toString","send","from","_dalicc","getLicenseInformation","getLicenseInfo","call","_licenseInfo"],"sources":["/home/sima/Desktop/finalMaster/src/SmartContract.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport FileUpload from \"./FileUpload\";\nimport DaliccConnectorContract from './contracts/PrimaryLicenseContract.json'\nimport getWeb3 from \"./getWeb3\";\n\n\n const SmartContract = () => {\n\n  const crypto = require(\"crypto\");\n  const [web3, setWeb3] = useState(null);\n  const [accounts, setAccounts] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [initialized, setInitialized] = useState(false);\n  const [dalicc, setLicenseDalicc] = useState(null);\n  const [licenseInfo, setLicenseInfo] = useState(\"\");\n  \n  const [hashValue, setHash] = useState('');\n  const [blockNumber, setBlockNumber] = useState('');\n  let hash = null;\n  let data = null;\n  let f = null;\n  let uri = null;\n  let address = null;\n  const init = async() => {\n    try {\n     \n    const _web3 = await getWeb3();\n    const _accounts = await _web3.eth.getAccounts();\n    const _networkId = await _web3.eth.net.getId();\n    const _blockNumber = await _web3.eth.getBlockNumber();\n    //console.log('BN:'+_blockNumber);\n    const _deployedNetwork = DaliccConnectorContract.networks[_networkId];\n    \n    const _contract = new _web3.eth.Contract(\n      DaliccConnectorContract.abi,\n      _deployedNetwork && _deployedNetwork.address\n      );\n\n //  console.log('infuraAccounts: '+_accounts);\n\n    setWeb3(_web3);\n    setAccounts(_accounts);\n    setContract(_contract);\n    console.log('accounts'+ _accounts)\n  //  setBlockNumber(_blockNumber); \n    setInitialized(true);\n   \n    } catch (error){ \n       alert('Failed to connect to Web3 in smart contract');    \n    }\n};\n\n   const licenseData = async (data, uri, address, f) => {\n     if (initialized) {\n       hash = crypto.createHash('sha256'); \n       const _dalicc = await contract.methods.licenseData('0x' + hash.update(data).digest('hex').toString(), uri).send({from: address}, f);  \n          setLicenseDalicc(_dalicc); \n           \n        } \n      };  \n     \n  const getLicenseInformation = async (data, address, f) => {     \n     if (initialized) {    \n         hash = crypto.createHash('sha256'); \n         const  _licenseInfo = await contract.methods.getLicenseInfo('0x' + hash.update(data).digest('hex').toString()).call({from: accounts}, f);   \n         setLicenseInfo(_licenseInfo); \n       \n        } \n      };\n   \n      \n       \n        useEffect(() => { \n          init();\n        }, [web3, accounts, contract]);\n      \n        useEffect(() => {\n          return () => getLicenseInformation(data, address, f);\n        }, [web3, accounts, contract] );\n        \n        useEffect(() => {\n          return () => licenseData(data, uri, address, f);\n        }, [web3, accounts, contract]);\n        \n       \n\n   return (\n     <div>\n        address={accounts}\n        blockNumber={blockNumber}\n        \n      <FileUpload\n        \n        web3={web3}\n        contract={contract}\n        accounts={accounts}\n        getLicenseInformation={getLicenseInformation}\n        licenseData={licenseData}\n\n      />\n  \n       </div>\n      \n    );\n \n}\n\n\nexport default SmartContract;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}