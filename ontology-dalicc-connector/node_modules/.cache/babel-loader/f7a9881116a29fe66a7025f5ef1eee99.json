{"ast":null,"code":"var ProviderEngine = require(\"web3-provider-engine\");\nvar FiltersSubprovider = require('web3-provider-engine/subproviders/filters');\nvar WalletSubprovider = require('web3-provider-engine/subproviders/wallet');\nvar RpcSubprovider = require('web3-provider-engine/subproviders/rpc');\nvar Wallet = require('ethereumjs-wallet').default;\nvar NonceSubprovider = require('web3-provider-engine/subproviders/nonce-tracker');\nfunction PrivateKeyProvider(privateKey, providerUrl) {\n  if (!privateKey) {\n    throw new Error(\"Private Key missing, non-empty string expected, got \\\"\".concat(privateKey, \"\\\"\"));\n  }\n  if (!providerUrl) {\n    throw new Error(\"Provider URL missing, non-empty string expected, got \\\"\".concat(providerUrl, \"\\\"\"));\n  }\n  if (privateKey.startsWith('0x')) {\n    privateKey = privateKey.substr(2, privateKey.length);\n  }\n  this.wallet = new Wallet(new Buffer(privateKey, \"hex\"));\n  this.address = \"0x\" + this.wallet.getAddress().toString(\"hex\");\n  this.engine = new ProviderEngine();\n  this.engine.addProvider(new FiltersSubprovider());\n  this.engine.addProvider(new NonceSubprovider());\n  this.engine.addProvider(new WalletSubprovider(this.wallet, {}));\n  this.engine.addProvider(new RpcSubprovider({\n    rpcUrl: providerUrl\n  }));\n  this.engine.start();\n}\nPrivateKeyProvider.prototype.sendAsync = function () {\n  this.engine.sendAsync.apply(this.engine, arguments);\n};\nPrivateKeyProvider.prototype.send = function () {\n  return this.engine.send.apply(this.engine, arguments);\n};\nmodule.exports = PrivateKeyProvider;","map":null,"metadata":{},"sourceType":"script"}