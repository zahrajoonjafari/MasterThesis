{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\nimport Semaphore from './Semaphore';\nvar Mutex = /** @class */function () {\n  function Mutex() {\n    this._semaphore = new Semaphore(1);\n  }\n  Mutex.prototype.acquire = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, releaser;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4 /*yield*/, this._semaphore.acquire()];\n          case 1:\n            _a = _b.sent(), releaser = _a[1];\n            return [2 /*return*/, releaser];\n        }\n      });\n    });\n  };\n  Mutex.prototype.runExclusive = function (callback) {\n    return this._semaphore.runExclusive(function () {\n      return callback();\n    });\n  };\n  Mutex.prototype.isLocked = function () {\n    return this._semaphore.isLocked();\n  };\n  Mutex.prototype.release = function () {\n    this._semaphore.release();\n  };\n  return Mutex;\n}();\nexport default Mutex;","map":null,"metadata":{},"sourceType":"module"}