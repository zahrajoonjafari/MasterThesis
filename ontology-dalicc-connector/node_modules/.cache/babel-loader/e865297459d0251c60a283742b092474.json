{"ast":null,"code":"var _require = require('./src/classes'),\n  EthereumRpcError = _require.EthereumRpcError,\n  EthereumProviderError = _require.EthereumProviderError;\nvar _require2 = require('./src/utils'),\n  serializeError = _require2.serializeError,\n  getMessageFromCode = _require2.getMessageFromCode;\nvar ethErrors = require('./src/errors');\nvar ERROR_CODES = require('./src/errorCodes.json');\nmodule.exports = {\n  ethErrors: ethErrors,\n  EthereumRpcError: EthereumRpcError,\n  EthereumProviderError: EthereumProviderError,\n  serializeError: serializeError,\n  getMessageFromCode: getMessageFromCode,\n  /** @type ErrorCodes */\n  ERROR_CODES: ERROR_CODES\n};\n\n// Types\n\n/**\n * @typedef {Object} EthereumProviderErrorCodes\n * @property {number} userRejectedRequest\n * @property {number} unauthorized\n * @property {number} unsupportedMethod\n * @property {number} disconnected\n * @property {number} chainDisconnected\n */\n\n/**\n * @typedef {Object} EthereumRpcErrorCodes\n * @property {number} parse\n * @property {number} invalidRequest\n * @property {number} invalidParams\n * @property {number} methodNotFound\n * @property {number} limitExceeded\n * @property {number} internal\n * @property {number} invalidInput\n * @property {number} resourceNotFound\n * @property {number} resourceUnavailable\n * @property {number} transactionRejected\n * @property {number} methodNotSupported\n */\n\n/**\n * @typedef ErrorCodes\n * @property {EthereumRpcErrorCodes} rpc\n * @property {EthereumProviderErrorCodes} provider\n */","map":null,"metadata":{},"sourceType":"script"}