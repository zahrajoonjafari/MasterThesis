{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = function (coll, iteratee, callback) {\n  var eachOfImplementation = (0, _isArrayLike2.default)(coll) ? eachOfArrayLike : eachOfGeneric;\n  eachOfImplementation(coll, (0, _wrapAsync2.default)(iteratee), callback);\n};\nvar _isArrayLike = require('lodash/isArrayLike');\nvar _isArrayLike2 = _interopRequireDefault(_isArrayLike);\nvar _breakLoop = require('./internal/breakLoop');\nvar _breakLoop2 = _interopRequireDefault(_breakLoop);\nvar _eachOfLimit = require('./eachOfLimit');\nvar _eachOfLimit2 = _interopRequireDefault(_eachOfLimit);\nvar _doLimit = require('./internal/doLimit');\nvar _doLimit2 = _interopRequireDefault(_doLimit);\nvar _noop = require('lodash/noop');\nvar _noop2 = _interopRequireDefault(_noop);\nvar _once = require('./internal/once');\nvar _once2 = _interopRequireDefault(_once);\nvar _onlyOnce = require('./internal/onlyOnce');\nvar _onlyOnce2 = _interopRequireDefault(_onlyOnce);\nvar _wrapAsync = require('./internal/wrapAsync');\nvar _wrapAsync2 = _interopRequireDefault(_wrapAsync);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n// eachOf implementation optimized for array-likes\nfunction eachOfArrayLike(coll, iteratee, callback) {\n  callback = (0, _once2.default)(callback || _noop2.default);\n  var index = 0,\n    completed = 0,\n    length = coll.length;\n  if (length === 0) {\n    callback(null);\n  }\n  function iteratorCallback(err, value) {\n    if (err) {\n      callback(err);\n    } else if (++completed === length || value === _breakLoop2.default) {\n      callback(null);\n    }\n  }\n  for (; index < length; index++) {\n    iteratee(coll[index], index, (0, _onlyOnce2.default)(iteratorCallback));\n  }\n}\n\n// a generic version of eachOf which can handle array, object, and iterator cases.\nvar eachOfGeneric = (0, _doLimit2.default)(_eachOfLimit2.default, Infinity);\n\n/**\n * Like [`each`]{@link module:Collections.each}, except that it passes the key (or index) as the second argument\n * to the iteratee.\n *\n * @name eachOf\n * @static\n * @memberOf module:Collections\n * @method\n * @alias forEachOf\n * @category Collection\n * @see [async.each]{@link module:Collections.each}\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A function to apply to each\n * item in `coll`.\n * The `key` is the item's key, or index in the case of an array.\n * Invoked with (item, key, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @example\n *\n * var obj = {dev: \"/dev.json\", test: \"/test.json\", prod: \"/prod.json\"};\n * var configs = {};\n *\n * async.forEachOf(obj, function (value, key, callback) {\n *     fs.readFile(__dirname + value, \"utf8\", function (err, data) {\n *         if (err) return callback(err);\n *         try {\n *             configs[key] = JSON.parse(data);\n *         } catch (e) {\n *             return callback(e);\n *         }\n *         callback();\n *     });\n * }, function (err) {\n *     if (err) console.error(err.message);\n *     // configs is now a map of JSON data\n *     doSomethingWith(configs);\n * });\n */\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}