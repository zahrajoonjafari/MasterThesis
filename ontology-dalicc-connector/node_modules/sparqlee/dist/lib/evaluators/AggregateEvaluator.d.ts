import type { Algebra } from 'sparqlalgebrajs';
import type { Bindings } from '../Types';
import { BaseAggregateEvaluator } from './BaseAggregateEvaluator';
import type { ISyncEvaluatorConfig } from './SyncEvaluator';
export declare class AggregateEvaluator extends BaseAggregateEvaluator {
    private readonly evaluator;
    constructor(expr: Algebra.AggregateExpression, config?: ISyncEvaluatorConfig, throwError?: boolean);
    put(bindings: Bindings): void;
    protected __put(bindings: Bindings): void;
    protected safeThrow(err: unknown): void;
    private init;
}
